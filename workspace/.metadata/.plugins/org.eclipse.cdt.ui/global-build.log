11:18:03 **** Rebuild of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
g++ -o Lutin.exe Automate.o 
c:/mingw/bin/../lib/gcc/mingw32/4.8.1/../../../libmingw32.a(main.o):(.text.startup+0xa7): undefined reference to `WinMain@16'
collect2.exe: error: ld returned 1 exit status
11:18:11 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ -o Lutin.exe Automate.o 
c:/mingw/bin/../lib/gcc/mingw32/4.8.1/../../../libmingw32.a(main.o):(.text.startup+0xa7): undefined reference to `WinMain@16'
collect2.exe: error: ld returned 1 exit status
11:56:57 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\Program Files (x86)\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.cpp:8:0:
..\Automate.h:11:35: fatal error: boost/lambda/lambda.hpp: No such file or directory
 #include <boost/lambda/lambda.hpp>
                                   ^
compilation terminated.
12:01:17 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\Program Files (x86)\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.cpp:8:0:
..\Automate.h:11:35: fatal error: boost/lambda/lambda.hpp: No such file or directory
 #include <boost/lambda/lambda.hpp>
                                   ^
compilation terminated.
12:01:21 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\Program Files (x86)\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.cpp:8:0:
..\Automate.h:11:35: fatal error: boost/lambda/lambda.hpp: No such file or directory
 #include <boost/lambda/lambda.hpp>
                                   ^
compilation terminated.
12:02:20 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\Program Files (x86)\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.cpp:8:0:
..\Automate.h:11:35: fatal error: boost/lambda/lambda.hpp: No such file or directory
 #include <boost/lambda/lambda.hpp>
                                   ^
compilation terminated.
12:07:24 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\Program Files (x86)\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.cpp:8:0:
..\Automate.h:11:35: fatal error: boost/lambda/lambda.hpp: No such file or directory
 #include <boost/lambda/lambda.hpp>
                                   ^
compilation terminated.
12:07:25 **** Rebuild of configuration Debug for project test ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o test.o "..\\test.cpp" 
..\test.cpp:8:35: fatal error: boost/lambda/lambda.hpp: No such file or directory
 #include <boost/lambda/lambda.hpp>
                                   ^
compilation terminated.
15:21:03 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\Program Files (x86)\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.cpp:8:0:
..\Automate.h:11:35: fatal error: boost/lambda/lambda.hpp: No such file or directory
 #include <boost/lambda/lambda.hpp>
                                   ^
compilation terminated.
15:21:03 **** Incremental Build of configuration Debug for project test ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o test.o "..\\test.cpp" 
g++ -o test.exe test.o 
15:21:53 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\Program Files (x86)\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.cpp:8:0:
..\Automate.h:11:35: fatal error: boost/lambda/lambda.hpp: No such file or directory
 #include <boost/lambda/lambda.hpp>
                                   ^
compilation terminated.
Info: Nothing to build for test
Info: Nothing to build for test
15:23:27 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
g++ -o Lutin.exe Automate.o 
c:/mingw/bin/../lib/gcc/mingw32/4.8.1/../../../libmingw32.a(main.o):(.text.startup+0xa7): undefined reference to `WinMain@16'
collect2.exe: error: ld returned 1 exit status
15:23:28 **** Incremental Build of configuration Debug for project test ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o test.o "..\\test.cpp" 
g++ -o test.exe test.o 
16:16:14 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ -o Lutin.exe Automate.o 
c:/mingw/bin/../lib/gcc/mingw32/4.8.1/../../../libmingw32.a(main.o):(.text.startup+0xa7): undefined reference to `WinMain@16'
collect2.exe: error: ld returned 1 exit status
Info: Nothing to build for test
17:02:15 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.cpp:8:0:
..\Automate.h:21:2: error: invalid use of template-name 'boost::lockfree::stack' without an argument list
  boost::lockfree::stack symboles;
  ^
..\Automate.h:22:2: error: invalid use of template-name 'boost::lockfree::stack' without an argument list
  boost::lockfree::stack etats;
  ^
17:02:35 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.cpp:8:0:
..\Automate.h:21:2: error: invalid use of template-name 'boost::lockfree::stack' without an argument list
  boost::lockfree::stack symboles;
  ^
..\Automate.h:22:2: error: invalid use of template-name 'boost::lockfree::stack' without an argument list
  boost::lockfree::stack etats;
  ^
17:11:38 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Symbole.o "..\\Symbole.cpp" 
..\Symbole.cpp:10:1: error: prototype for 'Symbole::Symbole()' does not match any in class 'Symbole'
 Symbole::Symbole() {
 ^
In file included from ..\Symbole.cpp:8:0:
..\Symbole.h:11:7: error: candidates are: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:13:2: error:                 Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
17:12:53 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.cpp:8:0:
..\Automate.h:21:2: error: invalid use of template-name 'boost::lockfree::stack' without an argument list
  boost::lockfree::stack symboles;
  ^
..\Automate.h:22:2: error: invalid use of template-name 'boost::lockfree::stack' without an argument list
  boost::lockfree::stack etats;
  ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:16:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:15:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:15:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:17:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:17:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:17:1: error: expected unqualified-id at end of input
17:13:13 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Symbole.o "..\\Symbole.cpp" 
..\Symbole.cpp:10:1: error: prototype for 'Symbole::Symbole()' does not match any in class 'Symbole'
 Symbole::Symbole() {
 ^
In file included from ..\Symbole.cpp:8:0:
..\Symbole.h:11:7: error: candidates are: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:13:2: error:                 Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
17:13:43 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Symbole.o "..\\Symbole.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.cpp:8:0:
..\Automate.h:22:2: error: invalid use of template-name 'boost::lockfree::stack' without an argument list
  boost::lockfree::stack symboles;
  ^
..\Automate.h:23:2: error: invalid use of template-name 'boost::lockfree::stack' without an argument list
  boost::lockfree::stack etats;
  ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:17:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:15:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:15:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:17:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:17:1: error: expected unqualified-id at end of input
17:15:04 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:13:0,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:22:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.cpp:8:0:
..\Automate.h:23:2: error: invalid use of template-name 'boost::lockfree::stack' without an argument list
  boost::lockfree::stack etats;
  ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:17:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:15:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
17:15:56 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:13:0,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:22:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.cpp:8:0:
..\Automate.h:23:2: error: invalid use of template-name 'boost::lockfree::stack' without an argument list
  boost::lockfree::stack etats;
  ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:17:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:15:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
17:21:22 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:13:0,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:22:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.cpp:8:0:
..\Automate.h:23:25: error: 'Etat' was not declared in this scope
  boost::lockfree::stack<Etat> etats;
                         ^
..\Automate.h:23:29: error: template argument 1 is invalid
  boost::lockfree::stack<Etat> etats;
                             ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:17:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:15:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
17:22:54 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:13:0,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:22:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.cpp:8:0:
..\Automate.h:23:25: error: 'Etat' was not declared in this scope
  boost::lockfree::stack<Etat> etats;
                         ^
..\Automate.h:23:29: error: template argument 1 is invalid
  boost::lockfree::stack<Etat> etats;
                             ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:17:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:15:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
17:28:22 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Symbole.o "..\\Symbole.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
In file included from ..\Etat.cpp:8:0:
..\Etat.h:18:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
..\Etat.h:18:47: error: 'Symbole' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                                               ^
..\Etat.cpp:10:1: error: prototype for 'Etat::Etat()' does not match any in class 'Etat'
 Etat::Etat() {
 ^
In file included from ..\Etat.cpp:8:0:
..\Etat.h:13:7: error: candidates are: Etat::Etat(const Etat&)
 class Etat {
       ^
..\Etat.h:15:2: error:                 Etat::Etat(std::string)
  Etat(std::string name);
  ^
17:29:06 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:13:0,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:22:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.cpp:8:0:
..\Automate.h:23:25: error: 'Etat' was not declared in this scope
  boost::lockfree::stack<Etat> etats;
                         ^
..\Automate.h:23:29: error: template argument 1 is invalid
  boost::lockfree::stack<Etat> etats;
                             ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:17:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:15:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
17:29:26 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Etat.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Etat.h:12:0,
                 from ..\Etat.cpp:8:
..\Automate.h:24:25: error: 'Etat' was not declared in this scope
  boost::lockfree::stack<Etat> etats;
                         ^
..\Automate.h:24:29: error: template argument 1 is invalid
  boost::lockfree::stack<Etat> etats;
                             ^
..\Etat.cpp:10:12: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat() {
            ^
..\Etat.cpp:15:13: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::~Etat() {
             ^
..\Etat.cpp:17:1: error: expected '}' at end of input
 }
 ^
..\Etat.cpp:17:1: error: expected unqualified-id at end of input
17:31:16 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:20:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:15:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Etat::Etat()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:17:2: note: Etat::Etat(std::string)
  Etat(std::string name);
  ^
..\Etat.h:17:2: note:   candidate expects 1 argument, 0 provided
..\Etat.h:15:7: note: Etat::Etat(const Etat&)
 class Etat {
       ^
..\Etat.h:15:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:15:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:20:15: note: 	virtual bool Etat::transition(int&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:138:40:   required from 'boost::lockfree::stack<T, A0, A1, A2>::stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:15:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
17:31:34 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Etat.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Etat.h:12:0,
                 from ..\Etat.cpp:8:
..\Automate.h:24:25: error: 'Etat' was not declared in this scope
  boost::lockfree::stack<Etat> etats;
                         ^
..\Automate.h:24:29: error: template argument 1 is invalid
  boost::lockfree::stack<Etat> etats;
                             ^
..\Etat.cpp:10:12: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat() {
            ^
..\Etat.cpp:15:13: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::~Etat() {
             ^
..\Etat.cpp:17:1: error: expected '}' at end of input
 }
 ^
..\Etat.cpp:17:1: error: expected unqualified-id at end of input
17:31:51 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:15:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:15:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:21:15: note: 	virtual bool Etat::transition(int&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:138:40:   required from 'boost::lockfree::stack<T, A0, A1, A2>::stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:15:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
17:32:09 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:15:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:15:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:21:15: note: 	virtual bool Etat::transition(int&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:138:40:   required from 'boost::lockfree::stack<T, A0, A1, A2>::stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:15:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
17:32:37 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:22:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:15:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:22:15: note: 	virtual bool Etat::transition(int&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:138:40:   required from 'boost::lockfree::stack<T, A0, A1, A2>::stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
17:32:53 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Etat.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Etat.h:13:0,
                 from ..\Etat.cpp:8:
..\Automate.h:24:25: error: 'Etat' was not declared in this scope
  boost::lockfree::stack<Etat> etats;
                         ^
..\Automate.h:24:29: error: template argument 1 is invalid
  boost::lockfree::stack<Etat> etats;
                             ^
..\Etat.cpp:10:12: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat() {
            ^
..\Etat.cpp:15:12: error: 'string' has not been declared
 Etat::Etat(string name) {
            ^
..\Etat.cpp:15:23: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat(string name) {
                       ^
..\Etat.cpp:19:13: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::~Etat() {
             ^
..\Etat.cpp:21:1: error: expected '}' at end of input
 }
 ^
..\Etat.cpp:21:1: error: expected unqualified-id at end of input
17:34:31 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Etat.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Etat.h:13:0,
                 from ..\Etat.cpp:8:
..\Automate.h:24:25: error: 'Etat' was not declared in this scope
  boost::lockfree::stack<Etat> etats;
                         ^
..\Automate.h:24:29: error: template argument 1 is invalid
  boost::lockfree::stack<Etat> etats;
                             ^
..\Etat.cpp:10:12: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat() {
            ^
..\Etat.cpp:15:12: error: 'string' has not been declared
 Etat::Etat(string name) {
            ^
..\Etat.cpp:15:23: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat(string name) {
                       ^
..\Etat.cpp:19:13: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::~Etat() {
             ^
..\Etat.cpp:21:1: error: expected '}' at end of input
 }
 ^
..\Etat.cpp:21:1: error: expected unqualified-id at end of input
17:34:42 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:15:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Etat::Etat()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:18:2: note: Etat::Etat(std::string)
  Etat(std::string name);
  ^
..\Etat.h:18:2: note:   candidate expects 1 argument, 0 provided
..\Etat.h:16:7: note: Etat::Etat(const Etat&)
 class Etat {
       ^
..\Etat.h:16:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:21:15: note: 	virtual bool Etat::transition(int&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:138:40:   required from 'boost::lockfree::stack<T, A0, A1, A2>::stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
17:35:06 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:15:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Etat::Etat()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:18:2: note: Etat::Etat(std::string)
  Etat(std::string name);
  ^
..\Etat.h:18:2: note:   candidate expects 1 argument, 0 provided
..\Etat.h:16:7: note: Etat::Etat(const Etat&)
 class Etat {
       ^
..\Etat.h:16:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:21:15: note: 	virtual bool Etat::transition(int&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:138:40:   required from 'boost::lockfree::stack<T, A0, A1, A2>::stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
17:36:13 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Etat.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Etat.h:13:0,
                 from ..\Etat.cpp:8:
..\Automate.h:24:25: error: 'Etat' was not declared in this scope
  boost::lockfree::stack<Etat> etats;
                         ^
..\Automate.h:24:29: error: template argument 1 is invalid
  boost::lockfree::stack<Etat> etats;
                             ^
..\Etat.cpp:10:12: error: 'string' has not been declared
 Etat::Etat(string name) {
            ^
..\Etat.cpp:10:23: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat(string name) {
                       ^
..\Etat.cpp:14:13: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::~Etat() {
             ^
..\Etat.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Etat.cpp:15:1: error: expected unqualified-id at end of input
17:36:38 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:15:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Etat::Etat()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:18:2: note: Etat::Etat(std::string)
  Etat(std::string name);
  ^
..\Etat.h:18:2: note:   candidate expects 1 argument, 0 provided
..\Etat.h:16:7: note: Etat::Etat(const Etat&)
 class Etat {
       ^
..\Etat.h:16:7: note:   candidate expects 1 argument, 0 provided
17:39:58 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Etat.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Etat.h:13:0,
                 from ..\Etat.cpp:8:
..\Automate.h:24:25: error: 'Etat' was not declared in this scope
  boost::lockfree::stack<Etat> etats;
                         ^
..\Automate.h:24:29: error: template argument 1 is invalid
  boost::lockfree::stack<Etat> etats;
                             ^
..\Etat.cpp:10:12: error: 'string' has not been declared
 Etat::Etat(string name) {
            ^
..\Etat.cpp:10:23: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat(string name) {
                       ^
..\Etat.cpp:14:13: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::~Etat() {
             ^
..\Etat.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Etat.cpp:15:1: error: expected unqualified-id at end of input
17:40:12 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Etat.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Etat.h:13:0,
                 from ..\Etat.cpp:8:
..\Automate.h:24:25: error: 'Etat' was not declared in this scope
  boost::lockfree::stack<Etat> etats;
                         ^
..\Automate.h:24:29: error: template argument 1 is invalid
  boost::lockfree::stack<Etat> etats;
                             ^
..\Etat.cpp:10:28: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat(std::string name) {
                            ^
..\Etat.cpp:14:13: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::~Etat() {
             ^
..\Etat.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Etat.cpp:15:1: error: expected unqualified-id at end of input
17:40:49 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:15:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Etat::Etat()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:18:2: note: Etat::Etat(std::string)
  Etat(std::string name);
  ^
..\Etat.h:18:2: note:   candidate expects 1 argument, 0 provided
..\Etat.h:16:7: note: Etat::Etat(const Etat&)
 class Etat {
       ^
..\Etat.h:16:7: note:   candidate expects 1 argument, 0 provided
17:41:09 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:23:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:16:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:16:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Etat::Etat()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:18:2: note: Etat::Etat(std::string)
  Etat(std::string name);
  ^
..\Etat.h:18:2: note:   candidate expects 1 argument, 0 provided
..\Etat.h:16:7: note: Etat::Etat(const Etat&)
 class Etat {
       ^
..\Etat.h:16:7: note:   candidate expects 1 argument, 0 provided
17:41:34 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:23:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:24:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:16:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:16:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Etat::Etat()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:18:2: note: Etat::Etat(std::string)
  Etat(std::string name);
  ^
..\Etat.h:18:2: note:   candidate expects 1 argument, 0 provided
..\Etat.h:16:7: note: Etat::Etat(const Etat&)
 class Etat {
       ^
..\Etat.h:16:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
17:44:10 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Symbole.o "..\\Symbole.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:23:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:24:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:16:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:16:1: error: expected unqualified-id at end of input
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Etat::Etat()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:18:2: note: Etat::Etat(std::string)
  Etat(std::string name);
  ^
..\Etat.h:18:2: note:   candidate expects 1 argument, 0 provided
..\Etat.h:16:7: note: Etat::Etat(const Etat&)
 class Etat {
       ^
..\Etat.h:16:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:22:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
17:44:40 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
In file included from ..\Etat.h:13:0,
                 from ..\Etat.cpp:8:
..\Automate.h:23:25: error: 'Etat' was not declared in this scope
  boost::lockfree::stack<Etat> etats;
                         ^
..\Automate.h:23:29: error: template argument 1 is invalid
  boost::lockfree::stack<Etat> etats;
                             ^
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Etat.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:24:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
..\Etat.cpp:10:28: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat(std::string name) {
                            ^
..\Etat.cpp:14:13: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::~Etat() {
             ^
..\Etat.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Etat.cpp:15:1: error: expected unqualified-id at end of input
17:45:23 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
..\Etat.cpp:10:28: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat(std::string name) {
                            ^
..\Etat.cpp:14:13: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::~Etat() {
             ^
..\Etat.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Etat.cpp:15:1: error: expected unqualified-id at end of input
17:48:58 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:16:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:16:1: error: expected unqualified-id at end of input
17:49:22 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:16:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:16:1: error: expected unqualified-id at end of input
17:55:09 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:16:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:16:1: error: expected unqualified-id at end of input
17:55:49 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
..\Etat.cpp:10:28: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat(std::string name) {
                            ^
..\Etat.cpp:14:13: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::~Etat() {
             ^
..\Etat.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Etat.cpp:15:1: error: expected unqualified-id at end of input
17:56:20 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:16:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:16:1: error: expected unqualified-id at end of input
17:56:52 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
..\Etat.cpp:10:28: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat(std::string name) {
                            ^
..\Etat.cpp:14:13: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::~Etat() {
             ^
..\Etat.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Etat.cpp:15:1: error: expected unqualified-id at end of input
17:58:53 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:16:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:16:1: error: expected unqualified-id at end of input
18:00:04 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
..\Etat1.cpp:10:14: error: cannot define member function 'Automate::Etat1::Etat1' within 'Automate'
 Etat1::Etat1() {
              ^
..\Etat1.cpp:15:15: error: cannot define member function 'Automate::Etat1::Etat1' within 'Automate'
 Etat1::~Etat1() {
               ^
..\Etat1.cpp:19:50: error: ISO C++ forbids declaration of 'transition' with no type [-fpermissive]
 Etat1::transition(Automate & automate, Symbole *s){}
                                                  ^
..\Etat1.cpp:19:50: error: cannot define member function 'Automate::Etat1::transition' within 'Automate'
..\Etat1.cpp:19:52: error: expected '}' at end of input
 Etat1::transition(Automate & automate, Symbole *s){}
                                                    ^
..\Etat1.cpp:19:52: error: expected unqualified-id at end of input
18:00:17 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
..\Etat.cpp:10:28: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat(std::string name) {
                            ^
..\Etat.cpp:14:13: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::~Etat() {
             ^
..\Etat.cpp:15:1: error: expected '}' at end of input
 }
 ^
..\Etat.cpp:15:1: error: expected unqualified-id at end of input
18:01:03 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
..\Etat1.cpp:10:14: error: cannot define member function 'Automate::Etat1::Etat1' within 'Automate'
 Etat1::Etat1() {
              ^
..\Etat1.cpp:15:15: error: cannot define member function 'Automate::Etat1::Etat1' within 'Automate'
 Etat1::~Etat1() {
               ^
..\Etat1.cpp:19:50: error: ISO C++ forbids declaration of 'transition' with no type [-fpermissive]
 Etat1::transition(Automate & automate, Symbole *s){}
                                                  ^
..\Etat1.cpp:19:50: error: cannot define member function 'Automate::Etat1::transition' within 'Automate'
..\Etat1.cpp:19:52: error: expected '}' at end of input
 Etat1::transition(Automate & automate, Symbole *s){}
                                                    ^
..\Etat1.cpp:19:52: error: expected unqualified-id at end of input
18:01:15 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
..\Etat1.cpp:10:14: error: cannot define member function 'Automate::Etat1::Etat1' within 'Automate'
 Etat1::Etat1() {
              ^
..\Etat1.cpp:15:15: error: cannot define member function 'Automate::Etat1::Etat1' within 'Automate'
 Etat1::~Etat1() {
               ^
..\Etat1.cpp:19:50: error: ISO C++ forbids declaration of 'transition' with no type [-fpermissive]
 Etat1::transition(Automate & automate, Symbole *s){}
                                                  ^
..\Etat1.cpp:19:50: error: cannot define member function 'Automate::Etat1::transition' within 'Automate'
..\Etat1.cpp:19:52: error: expected '}' at end of input
 Etat1::transition(Automate & automate, Symbole *s){}
                                                    ^
..\Etat1.cpp:19:52: error: expected unqualified-id at end of input
18:04:22 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
..\Etat.cpp:10:28: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat(std::string name) {
                            ^
..\Etat.cpp:12:1: error: expected '}' at end of input
 }
 ^
..\Etat.cpp:12:1: error: expected unqualified-id at end of input
18:06:09 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
..\Etat1.cpp:10:15: error: cannot define member function 'Automate::Etat1::Etat1' within 'Automate'
 Etat1::~Etat1() {
               ^
..\Etat1.cpp:14:49: error: ISO C++ forbids declaration of 'transition' with no type [-fpermissive]
 Etat1::transition(Automate &automate, Symbole *s){}
                                                 ^
..\Etat1.cpp:14:49: error: cannot define member function 'Automate::Etat1::transition' within 'Automate'
..\Etat1.cpp:14:51: error: expected '}' at end of input
 Etat1::transition(Automate &automate, Symbole *s){}
                                                   ^
In file included from ..\Etat1.cpp:8:0:
..\Etat1.h:15:14: error: expected unqualified-id at end of input
   Etat(name){}
              ^
18:07:06 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:18:2: error: with 'Automate::Automate()'
  Automate();
  ^
..\Automate.cpp:14:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:14:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:16:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:16:1: error: expected unqualified-id at end of input
18:08:04 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:12:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:12:1: error: expected unqualified-id at end of input
18:08:20 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:19:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:12:1: error: expected '}' at end of input
 }
 ^
..\Automate.cpp:12:1: error: expected unqualified-id at end of input
18:08:59 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
..\Automate.cpp:10:1: error: extra qualification 'Automate::' on member 'Automate' [-fpermissive]
 Automate::~Automate() {
 ^
..\Automate.cpp:10:1: error: 'Automate::~Automate()' cannot be overloaded
In file included from ..\Automate.cpp:8:0:
..\Automate.h:21:10: error: with 'virtual Automate::~Automate()'
  virtual ~Automate();
          ^
..\Automate.cpp:12:1: error: expected '}' at end of input
 }
 ^
In file included from ..\Automate.cpp:8:0:
..\Automate.h: In constructor 'Automate::Automate()':
..\Automate.h:19:2: error: expected identifier before '{' token
  {}
  ^
..\Automate.cpp: At global scope:
..\Automate.cpp:12:1: error: expected unqualified-id at end of input
 }
 ^
18:09:44 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
..\Etat.cpp:10:28: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat(std::string name) {
                            ^
..\Etat.cpp:12:1: error: expected '}' at end of input
 }
 ^
In file included from ..\Etat.h:13:0,
                 from ..\Etat.cpp:8:
..\Automate.h: In constructor 'Automate::Automate()':
..\Automate.h:18:12: error: expected identifier at end of input
  Automate():
            ^
..\Automate.h:18:12: error: expected '{' at end of input
..\Automate.h: At global scope:
..\Automate.h:18:12: error: expected unqualified-id at end of input
18:09:53 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
..\Etat.cpp:10:28: error: cannot define member function 'Automate::Etat::Etat' within 'Automate'
 Etat::Etat(std::string name) {
                            ^
..\Etat.cpp:12:1: error: expected '}' at end of input
 }
 ^
In file included from ..\Etat.h:13:0,
                 from ..\Etat.cpp:8:
..\Automate.h: In constructor 'Automate::Automate()':
..\Automate.h:19:2: error: expected identifier before '{' token
  {};
  ^
..\Automate.h: At global scope:
..\Automate.h:19:3: error: expected unqualified-id at end of input
  {};
   ^
18:10:23 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
In file included from ..\Etat.h:13:0,
                 from ..\Etat1.h:10,
                 from ..\Etat1.cpp:8:
..\Automate.h: In constructor 'Automate::Automate()':
..\Automate.h:19:2: error: expected identifier before '{' token
  {};
  ^
..\Etat1.cpp: At global scope:
..\Etat1.cpp:14:49: error: ISO C++ forbids declaration of 'transition' with no type [-fpermissive]
 Etat1::transition(Automate &automate, Symbole *s){}
                                                 ^
..\Etat1.cpp:14:1: error: prototype for 'int Etat1::transition(Automate&, Symbole*)' does not match any in class 'Etat1'
 Etat1::transition(Automate &automate, Symbole *s){}
 ^
In file included from ..\Etat1.cpp:8:0:
..\Etat1.h:17:7: error: candidate is: virtual bool Etat1::transition(Automate&, Symbole*)
  bool transition(Automate & automate, Symbole *s);
       ^
18:10:31 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
In file included from ..\Etat.h:13:0,
                 from ..\Etat.cpp:8:
..\Automate.h: In constructor 'Automate::Automate()':
..\Automate.h:19:2: error: expected identifier before '{' token
  {}
  ^
18:10:55 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
..\Etat1.cpp:14:49: error: ISO C++ forbids declaration of 'transition' with no type [-fpermissive]
 Etat1::transition(Automate &automate, Symbole *s){}
                                                 ^
..\Etat1.cpp:14:1: error: prototype for 'int Etat1::transition(Automate&, Symbole*)' does not match any in class 'Etat1'
 Etat1::transition(Automate &automate, Symbole *s){}
 ^
In file included from ..\Etat1.cpp:8:0:
..\Etat1.h:17:7: error: candidate is: virtual bool Etat1::transition(Automate&, Symbole*)
  bool transition(Automate & automate, Symbole *s);
       ^
18:11:30 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
..\Etat1.cpp:14:49: error: ISO C++ forbids declaration of 'transition' with no type [-fpermissive]
 Etat1::transition(Automate &automate, Symbole *s){}
                                                 ^
..\Etat1.cpp:14:1: error: prototype for 'int Etat1::transition(Automate&, Symbole*)' does not match any in class 'Etat1'
 Etat1::transition(Automate &automate, Symbole *s){}
 ^
In file included from ..\Etat1.cpp:8:0:
..\Etat1.h:17:15: error: candidate is: virtual bool Etat1::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s);
               ^
18:11:43 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
..\Etat1.cpp:14:49: error: ISO C++ forbids declaration of 'transition' with no type [-fpermissive]
 Etat1::transition(Automate &automate, Symbole *s){}
                                                 ^
..\Etat1.cpp:14:1: error: prototype for 'int Etat1::transition(Automate&, Symbole*)' does not match any in class 'Etat1'
 Etat1::transition(Automate &automate, Symbole *s){}
 ^
In file included from ..\Etat1.cpp:8:0:
..\Etat1.h:17:7: error: candidate is: virtual bool Etat1::transition(Automate&, Symbole*)
  bool transition(Automate & automate, Symbole *s);
       ^
18:12:00 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
..\Etat1.cpp:14:49: error: ISO C++ forbids declaration of 'transition' with no type [-fpermissive]
 Etat1::transition(Automate &automate, Symbole *s){
                                                 ^
..\Etat1.cpp:14:1: error: prototype for 'int Etat1::transition(Automate&, Symbole*)' does not match any in class 'Etat1'
 Etat1::transition(Automate &automate, Symbole *s){
 ^
In file included from ..\Etat1.cpp:8:0:
..\Etat1.h:17:7: error: candidate is: virtual bool Etat1::transition(Automate&, Symbole*)
  bool transition(Automate & automate, Symbole *s);
       ^
18:12:31 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
18:12:40 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
..\Etat1.cpp:14:8: error: expected unqualified-id before 'void'
 Etat1::void transition(Automate &automate, Symbole *s){
        ^
18:13:25 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
..\Etat1.cpp:14:6: error: prototype for 'void Etat1::transition(Automate&, Symbole*)' does not match any in class 'Etat1'
 void Etat1::transition(Automate &automate, Symbole *s){
      ^
In file included from ..\Etat1.cpp:8:0:
..\Etat1.h:17:7: error: candidate is: virtual bool Etat1::transition(Automate&, Symbole*)
  bool transition(Automate & automate, Symbole *s);
       ^
18:13:47 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
..\Etat1.cpp: In member function 'virtual bool Etat1::transition(Automate&, Symbole*)':
..\Etat1.cpp:15:1: warning: no return statement in function returning non-void [-Wreturn-type]
 }
 ^
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
18:14:08 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:21:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
18:16:12 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
g++ -o Lutin.exe Symbole.o Etat1.o Etat.o Automate.o 
Etat1.o: In function `ZN5Etat1D2Ev':
C:\Users\Huber\workspace\Lutin\Debug/../Etat1.cpp:10: undefined reference to `Etat::~Etat()'
Etat.o: In function `ZN4EtatC2ESs':
C:\Users\Huber\workspace\Lutin\Debug/../Etat.cpp:10: undefined reference to `vtable for Etat'
c:/mingw/bin/../lib/gcc/mingw32/4.8.1/../../../libmingw32.a(main.o):(.text.startup+0xa7): undefined reference to `WinMain@16'
collect2.exe: error: ld returned 1 exit status
18:16:32 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
In file included from ..\Etat.h:13:0,
                 from ..\Etat1.h:10,
                 from ..\Etat1.cpp:8:
..\Automate.h:23:25: error: 'Etat' was not declared in this scope
  boost::lockfree::stack<Etat> etats;
                         ^
..\Automate.h:23:29: error: template argument 1 is invalid
  boost::lockfree::stack<Etat> etats;
                             ^
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Etat1.h:10,
                 from ..\Etat1.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:24:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
18:16:49 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
In file included from ..\Etat.h:13:0,
                 from ..\Etat1.h:10,
                 from ..\Etat1.cpp:8:
..\Automate.h:24:25: error: 'Etat' was not declared in this scope
  boost::lockfree::stack<Etat> etats;
                         ^
..\Automate.h:24:29: error: template argument 1 is invalid
  boost::lockfree::stack<Etat> etats;
                             ^
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Etat1.h:10,
                 from ..\Etat1.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
18:16:58 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
In file included from ..\Etat.h:13:0,
                 from ..\Etat1.h:10,
                 from ..\Etat1.cpp:8:
..\Automate.h:25:25: error: 'Etat' was not declared in this scope
  boost::lockfree::stack<Etat> etats;
                         ^
..\Automate.h:25:29: error: template argument 1 is invalid
  boost::lockfree::stack<Etat> etats;
                             ^
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Etat1.h:10,
                 from ..\Etat1.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:26:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
18:17:19 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
In file included from ..\Etat.cpp:8:0:
..\Etat.h:20:26: error: 'Automate' has not been declared
  virtual bool transition(Automate & automate, Symbole *s) = 0;
                          ^
18:17:39 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:25:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:26:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Etat::Etat()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:18:2: note: Etat::Etat(std::string)
  Etat(std::string name);
  ^
..\Etat.h:18:2: note:   candidate expects 1 argument, 0 provided
..\Etat.h:16:7: note: Etat::Etat(const Etat&)
 class Etat {
       ^
..\Etat.h:16:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:21:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
18:18:11 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
g++ -o Lutin.exe Symbole.o Etat1.o Etat.o Automate.o 
Etat1.o: In function `ZN5Etat1D2Ev':
C:\Users\Huber\workspace\Lutin\Debug/../Etat1.cpp:10: undefined reference to `Etat::~Etat()'
Etat.o: In function `ZN4EtatC2ESs':
C:\Users\Huber\workspace\Lutin\Debug/../Etat.cpp:10: undefined reference to `vtable for Etat'
c:/mingw/bin/../lib/gcc/mingw32/4.8.1/../../../libmingw32.a(main.o):(.text.startup+0xa7): undefined reference to `WinMain@16'
collect2.exe: error: ld returned 1 exit status
18:18:22 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
g++ -o Lutin.exe Symbole.o Etat1.o Etat.o Automate.o 
Etat1.o: In function `ZN5Etat1D2Ev':
C:\Users\Huber\workspace\Lutin\Debug/../Etat1.cpp:10: undefined reference to `Etat::~Etat()'
Etat.o: In function `ZN4EtatC2ESs':
C:\Users\Huber\workspace\Lutin\Debug/../Etat.cpp:10: undefined reference to `vtable for Etat'
c:/mingw/bin/../lib/gcc/mingw32/4.8.1/../../../libmingw32.a(main.o):(.text.startup+0xa7): undefined reference to `WinMain@16'
collect2.exe: error: ld returned 1 exit status
18:18:52 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
g++ -o Lutin.exe Symbole.o Etat1.o Etat.o Automate.o 
c:/mingw/bin/../lib/gcc/mingw32/4.8.1/../../../libmingw32.a(main.o):(.text.startup+0xa7): undefined reference to `WinMain@16'
collect2.exe: error: ld returned 1 exit status
18:19:01 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ -o Lutin.exe Symbole.o Etat1.o Etat.o Automate.o 
c:/mingw/bin/../lib/gcc/mingw32/4.8.1/../../../libmingw32.a(main.o):(.text.startup+0xa7): undefined reference to `WinMain@16'
collect2.exe: error: ld returned 1 exit status
10:13:36 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:25:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Etat::Etat()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:18:2: note: Etat::Etat(std::string)
  Etat(std::string name);
  ^
..\Etat.h:18:2: note:   candidate expects 1 argument, 0 provided
..\Etat.h:16:7: note: Etat::Etat(const Etat&)
 class Etat {
       ^
..\Etat.h:16:7: note:   candidate expects 1 argument, 0 provided
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:21:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:17:10 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:25:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:22:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:21:46 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:25:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:23:34 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:25:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:23:42 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:26:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:26:07 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:26:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.cpp:8:0:
..\Automate.h: In constructor 'Automate::Automate()':
..\Automate.h:19:31: error: missing template arguments before '(' token
   etats(boost::lockfree::stack()){}
                               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.h:19:33:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.h:19:33:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:26:45 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:26:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.cpp:8:0:
..\Automate.h: In constructor 'Automate::Automate()':
..\Automate.h:19:31: error: missing template arguments before '(' token
   etats(boost::lockfree::stack()){};
                               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.h:19:33:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.h:19:33:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:27:38 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
..\Automate.cpp: In constructor 'Automate::Automate()':
..\Automate.cpp:15:38: error: missing template arguments before '(' token
  this->etats = boost::lockfree::stack();
                                      ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:27:57 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from C:\boost\boost_1_57_0/boost/config.hpp:61:0,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/std_containers_traits.hpp:18,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:18,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In constructor 'Automate::Automate()':
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:114:35: error: 'boost::lockfree::stack<T, A0, A1, A2>& boost::lockfree::stack<T, A0, A1, A2>::operator=(const boost::lockfree::stack<T, A0, A1, A2>&) [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]' is private
     BOOST_DELETED_FUNCTION(stack& operator= (stack const&))
                                   ^
..\Automate.cpp:15:14: error: within this context
  this->etats = boost::lockfree::stack<Etat>();
              ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:28:23 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
..\Automate.cpp: In constructor 'Automate::Automate()':
..\Automate.cpp:15:14: error: no match for 'operator=' (operand types are 'boost::lockfree::stack<Etat>' and 'boost::lockfree::stack<Etat>*')
  this->etats = new boost::lockfree::stack<Etat>();
              ^
..\Automate.cpp:15:14: note: candidate is:
In file included from C:\boost\boost_1_57_0/boost/config.hpp:61:0,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/std_containers_traits.hpp:18,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:18,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:114:35: note: boost::lockfree::stack<T, A0, A1, A2>& boost::lockfree::stack<T, A0, A1, A2>::operator=(const boost::lockfree::stack<T, A0, A1, A2>&) [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]
     BOOST_DELETED_FUNCTION(stack& operator= (stack const&))
                                   ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:114:35: note:   no known conversion for argument 1 from 'boost::lockfree::stack<Etat>*' to 'const boost::lockfree::stack<Etat>&'
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:28:31 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from C:\boost\boost_1_57_0/boost/config.hpp:61:0,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/std_containers_traits.hpp:18,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:18,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In constructor 'Automate::Automate()':
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:114:35: error: 'boost::lockfree::stack<T, A0, A1, A2>& boost::lockfree::stack<T, A0, A1, A2>::operator=(const boost::lockfree::stack<T, A0, A1, A2>&) [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]' is private
     BOOST_DELETED_FUNCTION(stack& operator= (stack const&))
                                   ^
..\Automate.cpp:15:14: error: within this context
  this->etats = boost::lockfree::stack<Etat>();
              ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:30:50 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:34:23 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
g++ -o Lutin.exe Symbole.o Etat1.o Etat.o Automate.o 
c:/mingw/bin/../lib/gcc/mingw32/4.8.1/../../../libmingw32.a(main.o):(.text.startup+0xa7): undefined reference to `WinMain@16'
collect2.exe: error: ld returned 1 exit status
10:34:50 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Symbole; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: no matching function for call to 'Symbole::Symbole()'
         T dummy;
           ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: note: candidates are:
In file included from ..\Automate.h:11:0,
                 from ..\Automate.cpp:8:
..\Symbole.h:13:2: note: Symbole::Symbole(int)
  Symbole(int id) : ident(id){};
  ^
..\Symbole.h:13:2: note:   candidate expects 1 argument, 0 provided
..\Symbole.h:11:7: note: Symbole::Symbole(const Symbole&)
 class Symbole {
       ^
..\Symbole.h:11:7: note:   candidate expects 1 argument, 0 provided
10:35:28 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Symbole.o "..\\Symbole.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
10:36:40 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
10:37:29 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:39:04 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:40:25 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:41:09 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:41:39 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:45:08 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:23:7: error: initializer specified for non-virtual method 'bool Etat::transition(Automate&, Symbole*)'
  bool transition(Automate & automate, Symbole *s) = 0;
       ^
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
10:45:24 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:48:06 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
10:48:25 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat.o "..\\Etat.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:48:45 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:52:49 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
..\Etat1.cpp: In member function 'virtual bool Etat1::transition(Automate&, Symbole*)':
..\Etat1.cpp:15:7: error: 'NOMBRE' was not declared in this scope
  case NOMBRE:
       ^
..\Etat1.cpp:16:7: error: 'VARIABLE' was not declared in this scope
  case VARIABLE:
       ^
..\Etat1.cpp:17:7: error: 'EXPR' was not declared in this scope
  case EXPR:
       ^
..\Etat1.cpp:20:7: error: 'OUVREPAR' was not declared in this scope
  case OUVREPAR:
       ^
10:53:57 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:54:49 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Etat1.o "..\\Etat1.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:56:06 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
10:56:57 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:07:54 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:17:28: error: 'map' does not name a type
  virtual double eval(const map<std::string, double> & valeurs) = 0;
                            ^
..\Expr.h:17:28: error: ISO C++ forbids declaration of 'parameter' with no type [-fpermissive]
..\Expr.h:17:31: error: expected ',' or '...' before '<' token
  virtual double eval(const map<std::string, double> & valeurs) = 0;
                               ^
..\Expr.h: In constructor 'Expr::Expr()':
..\Expr.h:15:17: error: 'EXPR' was not declared in this scope
  Expr():Symbole(EXPR){}
                 ^
..\Expr.cpp: At global scope:
..\Expr.cpp:10:1: error: redefinition of 'Expr::Expr()'
 Expr::Expr() {
 ^
In file included from ..\Expr.cpp:8:0:
..\Expr.h:15:2: error: 'Expr::Expr()' previously defined here
  Expr():Symbole(EXPR){}
  ^
11:08:47 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:15:46: fatal error: boost/fusion/container/map_fwd.hpp: No such file or directory
 #include <boost/fusion/container/map_fwd.hpp>
                                              ^
compilation terminated.
11:09:57 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:28: error: 'Container' in namespace 'boost' does not name a type
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                            ^
..\Expr.h:21:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h:21:47: error: expected ')' before '<' token
..\Expr.h:21:46: error: expected ';' at end of member declaration
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                              ^
..\Expr.h:21:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h: In constructor 'Expr::Expr()':
..\Expr.h:19:17: error: 'EXPR' was not declared in this scope
  Expr():Symbole(EXPR){}
                 ^
..\Expr.cpp: At global scope:
..\Expr.cpp:10:1: error: redefinition of 'Expr::Expr()'
 Expr::Expr() {
 ^
In file included from ..\Expr.cpp:8:0:
..\Expr.h:19:2: error: 'Expr::Expr()' previously defined here
  Expr():Symbole(EXPR){}
  ^
11:11:26 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:11:35 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o main.o "..\\main.cpp" 
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:28: error: 'Container' in namespace 'boost' does not name a type
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                            ^
..\Expr.h:21:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h:21:47: error: expected ')' before '<' token
..\Expr.h:21:46: error: expected ';' at end of member declaration
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                              ^
..\Expr.h:21:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h: In constructor 'Expr::Expr()':
..\Expr.h:19:17: error: 'EXPR' was not declared in this scope
  Expr():Symbole(EXPR){}
                 ^
..\Expr.cpp: At global scope:
..\Expr.cpp:10:1: error: redefinition of 'Expr::Expr()'
 Expr::Expr() {
 ^
In file included from ..\Expr.cpp:8:0:
..\Expr.h:19:2: error: 'Expr::Expr()' previously defined here
  Expr():Symbole(EXPR){}
  ^
11:11:54 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:28: error: 'Container' in namespace 'boost' does not name a type
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                            ^
..\Expr.h:21:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h:21:47: error: expected ')' before '<' token
..\Expr.h:21:46: error: expected ';' at end of member declaration
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                              ^
..\Expr.h:21:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h: In constructor 'Expr::Expr()':
..\Expr.h:19:17: error: 'EXPR' was not declared in this scope
  Expr():Symbole(EXPR){}
                 ^
11:12:28 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:18:8: error: 'EXPR' does not name a type
  const EXPR = 1;
        ^
..\Expr.h:22:28: error: 'Container' in namespace 'boost' does not name a type
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                            ^
..\Expr.h:22:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h:22:47: error: expected ')' before '<' token
..\Expr.h:22:46: error: expected ';' at end of member declaration
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                              ^
..\Expr.h:22:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h: In constructor 'Expr::Expr()':
..\Expr.h:20:17: error: 'EXPR' was not declared in this scope
  Expr():Symbole(EXPR){}
                 ^
11:12:33 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:18:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
..\Expr.h:22:28: error: 'Container' in namespace 'boost' does not name a type
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                            ^
..\Expr.h:22:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h:22:47: error: expected ')' before '<' token
..\Expr.h:22:46: error: expected ';' at end of member declaration
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                              ^
..\Expr.h:22:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
11:12:52 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:13:11 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:28: error: 'Container' in namespace 'boost' does not name a type
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                            ^
..\Expr.h:21:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h:21:47: error: expected ')' before '<' token
..\Expr.h:21:46: error: expected ';' at end of member declaration
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                              ^
..\Expr.h:21:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h:22:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1; // A CHANGER
                   ^
11:13:19 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:13:30 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:28: error: 'Container' in namespace 'boost' does not name a type
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                            ^
..\Expr.h:21:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h:21:47: error: expected ')' before '<' token
..\Expr.h:21:46: error: expected ';' at end of member declaration
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                              ^
..\Expr.h:21:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h:22:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1; //yp
                   ^
11:13:41 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:13:48 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:13:58 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:19:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1; //A CHANGER
                   ^
..\Expr.h:23:28: error: 'Container' in namespace 'boost' does not name a type
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                            ^
..\Expr.h:23:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h:23:47: error: expected ')' before '<' token
..\Expr.h:23:46: error: expected ';' at end of member declaration
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                              ^
..\Expr.h:23:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
11:14:29 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:19:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
..\Expr.h:23:28: error: 'Container' in namespace 'boost' does not name a type
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                            ^
..\Expr.h:23:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
..\Expr.h:23:47: error: expected ')' before '<' token
..\Expr.h:23:46: error: expected ';' at end of member declaration
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                              ^
..\Expr.h:23:47: error: expected unqualified-id before '<' token
  virtual double eval(const boost::Container::M<std::string, double> & valeurs) = 0;
                                               ^
11:14:59 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:19:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
..\Expr.h:23:20: error: 'Container' in namespace 'boost' does not name a type
  double eval(const boost::Container::M<std::string, double> & valeurs);
                    ^
..\Expr.h:23:39: error: expected unqualified-id before '<' token
  double eval(const boost::Container::M<std::string, double> & valeurs);
                                       ^
..\Expr.h:23:39: error: expected ')' before '<' token
..\Expr.h:23:38: error: expected ';' at end of member declaration
  double eval(const boost::Container::M<std::string, double> & valeurs);
                                      ^
..\Expr.h:23:39: error: expected unqualified-id before '<' token
  double eval(const boost::Container::M<std::string, double> & valeurs);
                                       ^
11:24:01 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:15:28: warning: extra tokens at end of #include directive [enabled by default]
 #include <boost/assert.hpp>;
                            ^
In file included from ..\Expr.cpp:8:0:
..\Expr.h:20:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
..\Expr.h:24:20: error: 'Container' in namespace 'boost' does not name a type
  double eval(const boost::Container::M<std::string, double>, & valeurs);
                    ^
..\Expr.h:24:39: error: expected unqualified-id before '<' token
  double eval(const boost::Container::M<std::string, double>, & valeurs);
                                       ^
..\Expr.h:24:39: error: expected ')' before '<' token
..\Expr.h:24:38: error: expected ';' at end of member declaration
  double eval(const boost::Container::M<std::string, double>, & valeurs);
                                      ^
..\Expr.h:24:39: error: expected unqualified-id before '<' token
  double eval(const boost::Container::M<std::string, double>, & valeurs);
                                       ^
11:26:21 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:26:50 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:15:28: warning: extra tokens at end of #include directive [enabled by default]
 #include <boost/assert.hpp>;
                            ^
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
..\Expr.h:25:20: error: 'map' does not name a type
  double eval(const map<std::string, double> & valeurs);
                    ^
..\Expr.h:25:20: error: ISO C++ forbids declaration of 'parameter' with no type [-fpermissive]
..\Expr.h:25:23: error: expected ',' or '...' before '<' token
  double eval(const map<std::string, double> & valeurs);
                       ^
11:27:10 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:27:27 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:15:28: warning: extra tokens at end of #include directive [enabled by default]
 #include <boost/assert.hpp>;
                            ^
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:28:20 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:15:28: warning: extra tokens at end of #include directive [enabled by default]
 #include <boost/assert.hpp>;
                            ^
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
..\Expr.h:26:20: error: 'Container' in namespace 'boost' does not name a type
  double eval(const boost::Container::M<std::string, double> & valeurs);
                    ^
..\Expr.h:26:39: error: expected unqualified-id before '<' token
  double eval(const boost::Container::M<std::string, double> & valeurs);
                                       ^
..\Expr.h:26:39: error: expected ')' before '<' token
..\Expr.h:26:38: error: expected ';' at end of member declaration
  double eval(const boost::Container::M<std::string, double> & valeurs);
                                      ^
..\Expr.h:26:39: error: expected unqualified-id before '<' token
  double eval(const boost::Container::M<std::string, double> & valeurs);
                                       ^
11:28:42 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:28:59 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:15:28: warning: extra tokens at end of #include directive [enabled by default]
 #include <boost/assert.hpp>;
                            ^
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
..\Expr.h:26:20: error: 'container' in namespace 'boost::fusion' does not name a type
  double eval(const boost::fusion::container::m<std::string, double> & valeurs);
                    ^
..\Expr.h:26:47: error: expected unqualified-id before '<' token
  double eval(const boost::fusion::container::m<std::string, double> & valeurs);
                                               ^
..\Expr.h:26:47: error: expected ')' before '<' token
..\Expr.h:26:46: error: expected ';' at end of member declaration
  double eval(const boost::fusion::container::m<std::string, double> & valeurs);
                                              ^
..\Expr.h:26:47: error: expected unqualified-id before '<' token
  double eval(const boost::fusion::container::m<std::string, double> & valeurs);
                                               ^
11:29:04 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:15:28: warning: extra tokens at end of #include directive [enabled by default]
 #include <boost/assert.hpp>;
                            ^
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
..\Expr.h:26:20: error: 'container' in namespace 'boost::fusion' does not name a type
  double eval(const boost::fusion::container::M<std::string, double> & valeurs);
                    ^
..\Expr.h:26:47: error: expected unqualified-id before '<' token
  double eval(const boost::fusion::container::M<std::string, double> & valeurs);
                                               ^
..\Expr.h:26:47: error: expected ')' before '<' token
..\Expr.h:26:46: error: expected ';' at end of member declaration
  double eval(const boost::fusion::container::M<std::string, double> & valeurs);
                                              ^
..\Expr.h:26:47: error: expected unqualified-id before '<' token
  double eval(const boost::fusion::container::M<std::string, double> & valeurs);
                                               ^
11:30:23 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:15:28: warning: extra tokens at end of #include directive [enabled by default]
 #include <boost/assert.hpp>;
                            ^
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
..\Expr.h:26:20: error: 'map' in namespace 'boost' does not name a type
  double eval(const boost::map<std::string, double> & valeurs);
                    ^
..\Expr.h:26:27: error: ISO C++ forbids declaration of 'parameter' with no type [-fpermissive]
  double eval(const boost::map<std::string, double> & valeurs);
                           ^
..\Expr.h:26:30: error: expected ',' or '...' before '<' token
  double eval(const boost::map<std::string, double> & valeurs);
                              ^
11:30:36 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:15:28: warning: extra tokens at end of #include directive [enabled by default]
 #include <boost/assert.hpp>;
                            ^
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:31:04 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:15:25: warning: extra tokens at end of #include directive [enabled by default]
 #include <boost/any.hpp>;
                         ^
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:31:22 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:34:11 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:34:19 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
..\Expr.h:26:20: error: 'container' in namespace 'boost::fusion' does not name a type
  double eval(const boost::fusion::container::M<std::string, double> & valeurs);
                    ^
..\Expr.h:26:47: error: expected unqualified-id before '<' token
  double eval(const boost::fusion::container::M<std::string, double> & valeurs);
                                               ^
..\Expr.h:26:47: error: expected ')' before '<' token
..\Expr.h:26:46: error: expected ';' at end of member declaration
  double eval(const boost::fusion::container::M<std::string, double> & valeurs);
                                              ^
..\Expr.h:26:47: error: expected unqualified-id before '<' token
  double eval(const boost::fusion::container::M<std::string, double> & valeurs);
                                               ^
11:34:24 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:46:05 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:46:29 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
..\Expr.h:26:28: error: 'container' in namespace 'boost::fusion' does not name a type
  virtual double eval(const boost::fusion::container::map<std::string, double> &valeurs) = ;
                            ^
..\Expr.h:26:57: error: expected unqualified-id before '<' token
  virtual double eval(const boost::fusion::container::map<std::string, double> &valeurs) = ;
                                                         ^
..\Expr.h:26:57: error: expected ')' before '<' token
..\Expr.h:26:54: error: expected ';' at end of member declaration
  virtual double eval(const boost::fusion::container::map<std::string, double> &valeurs) = ;
                                                      ^
..\Expr.h:26:57: error: expected unqualified-id before '<' token
  virtual double eval(const boost::fusion::container::map<std::string, double> &valeurs) = ;
                                                         ^
11:47:00 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Expr.o "..\\Expr.cpp" 
In file included from ..\Expr.cpp:8:0:
..\Expr.h:21:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  const int EXPR = 1;
                   ^
..\Expr.h:29:1: error: invalid pure specifier (only '= 0' is allowed) before '}' token
 };
 ^
..\Expr.h:26:70: error: expected ';' at end of member declaration
  virtual double eval(const std::map<std::string, double> &valeurs) = ;
                                                                      ^
11:47:06 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
11:47:21 **** Incremental Build of configuration Debug for project Lutin ****
Info: Internal Builder is used for build
g++ "-IC:\\boost\\boost_1_57_0" -O0 -g3 -Wall -c -fmessage-length=0 -o Automate.o "..\\Automate.cpp" 
In file included from C:\boost\boost_1_57_0/boost/iterator/iterator_categories.hpp:22:0,
                 from C:\boost\boost_1_57_0/boost/iterator/iterator_facade.hpp:14,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range_core.hpp:27,
                 from C:\boost\boost_1_57_0/boost/range/iterator_range.hpp:13,
                 from C:\boost\boost_1_57_0/boost/range/as_literal.hpp:22,
                 from C:\boost\boost_1_57_0/boost/algorithm/string/trim.hpp:19,
                 from C:\boost\boost_1_57_0/boost/algorithm/string.hpp:19,
                 from ..\Etat.h:11,
                 from ..\Automate.h:12,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Etat>':
..\Automate.h:24:31:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'class boost::lockfree::stack<Symbole>':
..\Automate.h:25:34:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:73:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_assign<T>::value);
     ^
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:74:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT(boost::has_trivial_destructor<T>::value);
     ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]':
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:209:11: error: cannot declare variable 'dummy' to be of abstract type 'Etat'
         T dummy;
           ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   because the following virtual functions are pure within 'Etat':
 class Etat {
       ^
..\Etat.h:23:15: note: 	virtual bool Etat::transition(Automate&, Symbole*)
  virtual bool transition(Automate & automate, Symbole *s) = 0;
               ^
In file included from ..\Automate.h:13:0,
                 from ..\Automate.cpp:8:
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp: In instantiation of 'struct boost::lockfree::stack<Etat>::node':
C:\boost\boost_1_57_0/boost/lockfree/detail/freelist.hpp:125:49:   required from 'boost::lockfree::detail::freelist_stack<T, Alloc>::~freelist_stack() [with T = boost::lockfree::stack<Etat>::node; Alloc = std::allocator<boost::lockfree::stack<Etat>::node>]'
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:212:5:   required from 'boost::lockfree::stack<T, A0, A1, A2>::~stack() [with T = Etat; A0 = boost::parameter::void_; A1 = boost::parameter::void_; A2 = boost::parameter::void_]'
..\Automate.cpp:10:21:   required from here
C:\boost\boost_1_57_0/boost/lockfree/stack.hpp:92:17: error: cannot declare field 'boost::lockfree::stack<Etat>::node::v' to be of abstract type 'Etat'
         const T v;
                 ^
In file included from ..\Automate.h:12:0,
                 from ..\Automate.cpp:8:
..\Etat.h:16:7: note:   since type 'Etat' has pure virtual functions
 class Etat {
       ^
